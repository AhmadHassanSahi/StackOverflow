// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using WatchKit;

namespace WatchConnectivity.OnWatchExtension
{
	public partial class TableInterfaceController : WKInterfaceController
	{
        protected TableInterfaceController(IntPtr handle) : base(handle)
        {
            // Note: this .ctor should not contain any initialization logic.
        }

        public override void Awake(NSObject context)
        {
            base.Awake(context);

            // Configure interface objects here.
            Console.WriteLine("{0} awake with context", this);
            this.LoadTableData();
        }


        private void LoadTableData()
        {
            var cityNames = new[] { "r1", "r2", "r3", "r4", "r5" };

            Table.SetNumberOfRows(cityNames.Length, "default");

            for (var i = 0; i < cityNames.Length; i++)
            {
                var row = (FavoriteRowController)Table.GetRowController(i);
                row.RowLabel.SetText(cityNames[i]);
            }
        }

        public override void WillActivate()
        {
            // This method is called when the watch view controller is about to be visible to the user.
            Console.WriteLine("{0} will activate", this);
        }

        public override void DidDeactivate()
        {
            // This method is called when the watch view controller is no longer visible to the user.
            Console.WriteLine("{0} did deactivate", this);
        }

        public override void DidSelectRow(WKInterfaceTable table, nint rowIndex)
        {
            base.DidSelectRow(table, rowIndex);
            if (rowIndex%2 == 0)
            {
                PushController("View2", "Context");
            }
            else
            {
                PushController("View3", "Context");
            }
        }
	}
}
